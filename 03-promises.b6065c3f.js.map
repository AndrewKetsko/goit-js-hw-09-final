{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAChCC,EAAWF,SAASC,cAAc,UAoCxC,SAASE,EAAcC,EAAUC,GACjC,IAAMC,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7BC,YAAW,WACPN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAElBA,E,IA3CLN,EAAOc,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBACFb,EAASc,UAAUC,IAAI,WACvB,IAA6DC,EAAfJ,EAAEK,cAAxCC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAM7BC,GAAaH,EAAMI,MACjBC,EAAa,GAEnB,IAAKC,EAAI,EAAGA,EAAIJ,EAAOE,MAAOE,GAAK,EAAG,CAEpCH,GAAaH,EAAMI,MAAQH,EAAKG,MAAQE,EAExC,IAAIC,EAAqBzB,EAAcwB,EAAI,EAAGH,GAC3CK,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBR,EAAAkC,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,O,IAE9D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBR,EAAAkC,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,O,IAE9DqB,EAAWU,KAAKR,E,CAGlBnB,QAAQ4B,IAAIX,GACTY,SAAQ,W,OAAM1B,YAAW,WACxBV,EAASc,UAAUuB,OAAO,U,GAAY,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('form');\nconst buttonEl = document.querySelector('button');\n\nformEl.addEventListener('submit', submitFn);\n\nfunction submitFn(e) {\n  e.preventDefault();\n  buttonEl.classList.add('disable')\n  const { elements: { delay, step, amount } } = e.currentTarget;\n  \n  // console.log(+delay.value);\n  // console.log(+step.value);\n  // console.log(+amount.value);\n\n  let fullDelay = +delay.value;\n  const promiseArr = [];\n  \n  for (i = 0; i < amount.value; i += 1) {\n\n    fullDelay = +delay.value + step.value * i;\n    \n    let currentPromiseLink = createPromise(i + 1, fullDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n      });\n    promiseArr.push(currentPromiseLink);\n  }\n\n  Promise.all(promiseArr)\n    .finally(() => setTimeout(() => {\n      buttonEl.classList.remove('disable')},1000))\n};\n\n\nfunction createPromise(position, delay) {\nconst shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n  setTimeout(() => {\n  if (shouldResolve) {\n    resolve({ position, delay });\n  } else {\n    reject({ position, delay });\n  }\n  }, delay);\n   });\n };\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$buttonEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","classList","add","_elements","currentTarget","elements","delay1","step","amount","fullDelay","value","promiseArr","i","currentPromiseLink","then","param","Notify","success","concat","catch","failure","push","all","finally","remove"],"version":3,"file":"03-promises.b6065c3f.js.map"}